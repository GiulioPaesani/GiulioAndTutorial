{"version":3,"file":"index.js","sourceRoot":"","sources":["../index.ts"],"names":[],"mappings":"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","sourcesContent":["import spotify from \"spotify-url-info\";\nimport spotifyURI from \"spotify-uri\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { CustomPlugin, DisTubeError, Playlist, Song, checkInvalidKey } from \"distube\";\nimport type { VoiceBasedChannel } from \"discord.js\";\nimport type { CustomPluginPlayOptions, PlaylistInfo, Queue, SearchResult } from \"distube\";\n\nconst SUPPORTED_TYPES = [\"album\", \"artist\", \"playlist\", \"track\"];\nconst API = new SpotifyWebApi();\nlet expirationTime = 0;\n\ndeclare type SpotifyPluginOptions = {\n  api?: {\n    clientId: string;\n    clientSecret: string;\n  };\n  parallel?: boolean;\n  emitEventsAfterFetching?: boolean;\n};\n\ntype Falsy = undefined | null | false | 0 | \"\";\nconst isTruthy = <T>(x: T | Falsy): x is T => Boolean(x);\n\nconst getItems = async (data: any): Promise<any[]> => {\n  if (!data.tracks.items) return data.tracks;\n  const items: any[] = data.tracks.items;\n  if (![\"playlist\", \"album\"].includes(data.type)) return items;\n  while (data.tracks.next) {\n    if (!expirationTime) break;\n    if (expirationTime <= Date.now() - 1000) {\n      const res = await API.clientCredentialsGrant();\n      expirationTime = Date.now() + res.body.expires_in;\n      API.setAccessToken(res.body.access_token);\n    }\n    try {\n      data.tracks = (\n        await API[data.type === \"playlist\" ? \"getPlaylistTracks\" : \"getAlbumTracks\"](data.id, {\n          offset: data.tracks.offset + data.tracks.limit,\n          limit: 100,\n        })\n      ).body;\n    } catch (e: any) {\n      process.emitWarning(`${e?.message}`, \"SpotifyAPI\");\n      process.emitWarning(\"There is a Spotify API error, max songs of Spotify playlist is 100.\", \"SpotifyPlugin\");\n      break;\n    }\n    items.push(...data.tracks.items);\n  }\n  return items;\n};\n\nexport class SpotifyPlugin extends CustomPlugin {\n  parallel: boolean;\n  emitEventsAfterFetching: boolean;\n  constructor(options: SpotifyPluginOptions = {}) {\n    super();\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new DisTubeError(\"INVALID_TYPE\", [\"object\", \"undefined\"], options, \"SpotifyPluginOptions\");\n    }\n    checkInvalidKey(options, [\"parallel\", \"emitEventsAfterFetching\", \"api\"], \"SpotifyPluginOptions\");\n    this.parallel = options.parallel ?? true;\n    if (typeof this.parallel !== \"boolean\") {\n      throw new DisTubeError(\"INVALID_TYPE\", \"boolean\", this.parallel, \"parallel\");\n    }\n    this.emitEventsAfterFetching = options.emitEventsAfterFetching ?? false;\n    if (typeof this.emitEventsAfterFetching !== \"boolean\") {\n      throw new DisTubeError(\"INVALID_TYPE\", \"boolean\", this.emitEventsAfterFetching, \"emitEventsAfterFetching\");\n    }\n    API.setAccessToken(\"\");\n    if (options.api !== undefined && (typeof options.api !== \"object\" || Array.isArray(options.api))) {\n      throw new DisTubeError(\"INVALID_TYPE\", [\"object\", \"undefined\"], options.api, \"api\");\n    } else if (options.api) {\n      if (typeof options.api.clientId !== \"string\") {\n        throw new DisTubeError(\"INVALID_TYPE\", \"string\", options.api.clientId, \"api.clientId\");\n      }\n      if (typeof options.api.clientSecret !== \"string\") {\n        throw new DisTubeError(\"INVALID_TYPE\", \"string\", options.api.clientSecret, \"api.clientSecret\");\n      }\n      API.setClientId(options.api.clientId);\n      API.setClientSecret(options.api.clientSecret);\n      API.clientCredentialsGrant()\n        .then(data => {\n          expirationTime = Date.now() + data.body.expires_in;\n          API.setAccessToken(data.body.access_token);\n        })\n        .catch(e => {\n          /* eslint-disable no-console */\n          console.error(e);\n          console.warn(\"[SpotifyPlugin]: Cannot get Spotify access Token from your api info. Disabled API feature!\");\n          /* eslint-enable no-console */\n        });\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async validate(url: string) {\n    if (typeof url !== \"string\" || !url.includes(\"spotify\")) return false;\n    try {\n      const parsedURL = spotifyURI.parse(url);\n      if (!parsedURL.type || !SUPPORTED_TYPES.includes(parsedURL.type)) return false;\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async play(voiceChannel: VoiceBasedChannel, url: string, options: CustomPluginPlayOptions) {\n    const DT = this.distube;\n    const data = await spotify.getData(url);\n    const { member, textChannel, skip, position, metadata } = Object.assign({ position: 0 }, options);\n    if (data.type === \"track\") {\n      const query = `${data.name} ${data.artists.map((a: any) => a.name).join(\" \")}`;\n      const result = await this.search(query);\n      if (!result) throw new DisTubeError(\"SPOTIFY_PLUGIN_NO_RESULT\", `Cannot find \"${query}\" on YouTube.`);\n      await DT.play(voiceChannel, result, options);\n    } else {\n      const name = data.name;\n      const thumbnail = data.images[0]?.url;\n      const queries: string[] = (await getItems(data))\n        .map(item => {\n          const track = item.track || item;\n          if (track.type !== \"track\") return null;\n          return `${track.name} ${track.artists.map((a: any) => a.name).join(\" \")}`;\n        })\n        .filter(isTruthy);\n      let firstSong: Song | undefined;\n      const getFirstSong = async () => {\n        const firstQuery = queries.shift();\n        if (!firstQuery) return;\n        const result = await this.search(firstQuery);\n        if (!result) return;\n        firstSong = new Song(result, { member, metadata });\n      };\n      while (!firstSong) {\n        await getFirstSong();\n      }\n\n      if (!firstSong) {\n        throw new DisTubeError(\"SPOTIFY_PLUGIN_NO_RESULT\", `Cannot find any tracks of \"${name}\" on YouTube.`);\n      }\n      const queue = DT.getQueue(voiceChannel);\n\n      const playlistInfo: PlaylistInfo = {\n        source: \"spotify\",\n        songs: [firstSong],\n        name,\n        thumbnail,\n        member,\n        url: data.external_urls.spotify,\n      };\n      const playlist = new Playlist(playlistInfo, { member, metadata });\n      const fetchTheRest = async (q: Queue, fs: Song) => {\n        if (queries.length) {\n          let results: (SearchResult | null)[] = [];\n          if (this.parallel) {\n            results = await Promise.all(queries.map(query => this.search(query)));\n          } else {\n            for (let i = 0; i < queries.length; i++) {\n              results[i] = await this.search(queries[i]);\n            }\n          }\n          playlist.songs = results.filter(isTruthy).map(r => {\n            const s = new Song(r, { member, metadata });\n            s.playlist = playlist;\n            return s;\n          });\n          q.addToQueue(playlist.songs, !skip && position > 0 ? position + 1 : position);\n        }\n        playlist.songs.unshift(fs);\n      };\n      if (queue) {\n        queue.addToQueue(firstSong, position);\n        if (skip) queue.skip();\n        else if (!this.emitEventsAfterFetching) DT.emit(\"addList\", queue, playlist);\n        await fetchTheRest(queue, firstSong);\n        if (!skip && this.emitEventsAfterFetching) DT.emit(\"addList\", queue, playlist);\n      } else {\n        let newQueue = await DT.queues.create(voiceChannel, firstSong, textChannel);\n        while (newQueue === true) {\n          await getFirstSong();\n          newQueue = await DT.queues.create(voiceChannel, firstSong, textChannel);\n        }\n        if (!this.emitEventsAfterFetching) {\n          if (DT.options.emitAddListWhenCreatingQueue) DT.emit(\"addList\", newQueue, playlist);\n          DT.emit(\"playSong\", newQueue, firstSong);\n        }\n        await fetchTheRest(newQueue, firstSong);\n        if (this.emitEventsAfterFetching) {\n          if (DT.options.emitAddListWhenCreatingQueue) DT.emit(\"addList\", newQueue, playlist);\n          DT.emit(\"playSong\", newQueue, firstSong);\n        }\n      }\n    }\n  }\n\n  async search(query: string) {\n    try {\n      return (await this.distube.search(query, { limit: 1 }))[0];\n    } catch {\n      return null;\n    }\n  }\n}\n\nexport default SpotifyPlugin;\n"]}