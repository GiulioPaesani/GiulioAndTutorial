{"version":3,"file":"DisTubeVoice.js","sourceRoot":"","sources":["../../../src/core/voice/DisTubeVoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { TypedEmitter } from \"tiny-typed-emitter\";\nimport { DisTubeError, createDiscordJSAdapter, entersState, isSupportedVoiceChannel } from \"../..\";\nimport {\n  AudioPlayerStatus,\n  VoiceConnectionDisconnectReason,\n  VoiceConnectionStatus,\n  createAudioPlayer,\n  createAudioResource,\n  joinVoiceChannel,\n} from \"@discordjs/voice\";\nimport type { DisTubeStream, DisTubeVoiceEvents, DisTubeVoiceManager } from \"../..\";\nimport type { AudioPlayer, AudioResource, VoiceConnection } from \"@discordjs/voice\";\nimport type { Snowflake, VoiceBasedChannel, VoiceState } from \"discord.js\";\n\n/**\n * Create a voice connection to the voice channel\n */\nexport class DisTubeVoice extends TypedEmitter<DisTubeVoiceEvents> {\n  readonly id: Snowflake;\n  readonly voices: DisTubeVoiceManager;\n  readonly audioPlayer: AudioPlayer;\n  connection!: VoiceConnection;\n  audioResource?: AudioResource;\n  emittedError!: boolean;\n  isDisconnected = false;\n  #channel!: VoiceBasedChannel;\n  #volume = 100;\n  constructor(voiceManager: DisTubeVoiceManager, channel: VoiceBasedChannel) {\n    super();\n    if (!isSupportedVoiceChannel(channel)) {\n      throw new DisTubeError(\"INVALID_TYPE\", \"BaseGuildVoiceChannel\", channel, \"channel\");\n    }\n    if (!channel.joinable) {\n      if (channel.full) throw new DisTubeError(\"VOICE_FULL\");\n      else throw new DisTubeError(\"VOICE_MISSING_PERMS\");\n    }\n    this.id = channel.guild.id;\n    this.channel = channel;\n    /**\n     * The voice manager that instantiated this connection\n     * @type {DisTubeVoiceManager}\n     */\n    this.voices = voiceManager;\n    this.voices.add(this.id, this);\n    this.audioPlayer = createAudioPlayer()\n      .on(AudioPlayerStatus.Idle, oldState => {\n        if (oldState.status !== AudioPlayerStatus.Idle) {\n          delete this.audioResource;\n          this.emit(\"finish\");\n        }\n      })\n      .on(\"error\", error => {\n        if (this.emittedError) return;\n        this.emittedError = true;\n        this.emit(\"error\", error);\n      });\n    this.connection\n      .on(VoiceConnectionStatus.Disconnected, (_, newState) => {\n        if (newState.reason === VoiceConnectionDisconnectReason.WebSocketClose && newState.closeCode === 4014) {\n          entersState(this.connection, VoiceConnectionStatus.Connecting, 5e3).catch(() => {\n            this.leave();\n          });\n        } else if (this.connection.rejoinAttempts < 5) {\n          setTimeout(() => {\n            this.connection.rejoin();\n          }, (this.connection.rejoinAttempts + 1) * 5e3).unref();\n        } else if (this.connection.state.status !== VoiceConnectionStatus.Destroyed) {\n          this.leave(new DisTubeError(\"VOICE_RECONNECT_FAILED\"));\n        }\n      })\n      .on(VoiceConnectionStatus.Destroyed, () => {\n        this.leave();\n      })\n      // eslint-disable-next-line no-console\n      .on(\"error\", console.warn);\n    this.connection.subscribe(this.audioPlayer);\n    /**\n     * Get or set the volume percentage\n     * @name DisTubeVoice#volume\n     * @type {number}\n     */\n  }\n  get channel() {\n    return this.#channel;\n  }\n  set channel(channel: VoiceBasedChannel) {\n    if (!isSupportedVoiceChannel(channel)) {\n      throw new DisTubeError(\"INVALID_TYPE\", \"BaseGuildVoiceChannel\", channel, \"DisTubeVoice#channel\");\n    }\n    if (channel.guild.id !== this.id) throw new DisTubeError(\"VOICE_CHANGE_GUILD\");\n    this.connection = this.#join(channel);\n    this.#channel = channel;\n  }\n  #join(channel: VoiceBasedChannel) {\n    return joinVoiceChannel({\n      channelId: channel.id,\n      guildId: this.id,\n      adapterCreator: (channel.guild.voiceAdapterCreator as any) || createDiscordJSAdapter(channel as any),\n    });\n  }\n  /**\n   * Join a voice channel with this connection\n   * @param {Discord.BaseGuildVoiceChannel} [channel] A voice channel\n   * @private\n   * @returns {Promise<DisTubeVoice>}\n   */\n  async join(channel?: VoiceBasedChannel): Promise<DisTubeVoice> {\n    const TIMEOUT = 30e3;\n    if (channel) {\n      this.channel = channel;\n    }\n    try {\n      await entersState(this.connection, VoiceConnectionStatus.Ready, TIMEOUT);\n    } catch {\n      if (this.connection.state.status !== VoiceConnectionStatus.Destroyed) {\n        this.connection.destroy();\n      }\n      this.voices.delete(this.id);\n      if ((this.voiceState as any)?.connection) throw new DisTubeError(\"VOICE_DEPRECATED_CONNECTION\");\n      throw new DisTubeError(\"VOICE_CONNECT_FAILED\", TIMEOUT / 1e3);\n    }\n    return this;\n  }\n  /**\n   * Leave the voice channel of this connection\n   * @param {Error} [error] Optional, an error to emit with 'error' event.\n   */\n  leave(error?: Error) {\n    this.stop(true);\n    if (!this.isDisconnected) {\n      this.emit(\"disconnect\", error);\n      this.isDisconnected = true;\n    }\n    if (this.connection.state.status !== VoiceConnectionStatus.Destroyed) this.connection.destroy();\n    this.voices.delete(this.id);\n  }\n  /**\n   * Stop the playing stream\n   * @param {boolean} [force=false] If true, will force the {@link DisTubeVoice#audioPlayer} to enter the Idle state\n   * even if the {@link DisTubeVoice#audioResource} has silence padding frames.\n   * @private\n   */\n  stop(force = false) {\n    this.audioPlayer.stop(force);\n  }\n  /**\n   * Play a readable stream\n   * @private\n   * @param {DisTubeStream} stream Readable stream\n   */\n  play(stream: DisTubeStream) {\n    this.emittedError = false;\n    stream.stream.on(\"error\", (error: NodeJS.ErrnoException) => {\n      if (this.emittedError || error.code === \"ERR_STREAM_PREMATURE_CLOSE\") return;\n      this.emittedError = true;\n      this.emit(\"error\", error);\n    });\n    this.audioResource = createAudioResource(stream.stream, {\n      inputType: stream.type,\n      inlineVolume: true,\n    });\n    // eslint-disable-next-line no-self-assign\n    this.volume = this.volume;\n    this.audioPlayer.play(this.audioResource);\n  }\n  set volume(volume: number) {\n    if (typeof volume !== \"number\" || isNaN(volume)) {\n      throw new DisTubeError(\"INVALID_TYPE\", \"number\", volume, \"volume\");\n    }\n    if (volume < 0) {\n      throw new DisTubeError(\"NUMBER_COMPARE\", \"Volume\", \"bigger or equal to\", 0);\n    }\n    this.#volume = volume;\n    this.audioResource?.volume?.setVolume(Math.pow(this.#volume / 100, 0.5 / Math.log10(2)));\n  }\n  get volume() {\n    return this.#volume;\n  }\n  /**\n   * Playback duration of the audio resource in seconds\n   * @type {number}\n   */\n  get playbackDuration() {\n    return (this.audioResource?.playbackDuration ?? 0) / 1000;\n  }\n  pause() {\n    this.audioPlayer.pause();\n  }\n  unpause() {\n    this.audioPlayer.unpause();\n  }\n  /**\n   * Whether the bot is self-deafened\n   * @type {boolean}\n   */\n  get selfDeaf(): boolean {\n    return this.connection.joinConfig.selfDeaf;\n  }\n  /**\n   * Whether the bot is self-muted\n   * @type {boolean}\n   */\n  get selfMute(): boolean {\n    return this.connection.joinConfig.selfMute;\n  }\n  /**\n   * Self-deafens/undeafens the bot.\n   * @param {boolean} selfDeaf Whether or not the bot should be self-deafened\n   * @returns {boolean} true if the voice state was successfully updated, otherwise false\n   */\n  setSelfDeaf(selfDeaf: boolean): boolean {\n    if (typeof selfDeaf !== \"boolean\") {\n      throw new DisTubeError(\"INVALID_TYPE\", \"boolean\", selfDeaf, \"selfDeaf\");\n    }\n    return this.connection.rejoin({\n      ...this.connection.joinConfig,\n      selfDeaf,\n    });\n  }\n  /**\n   * Self-mutes/unmutes the bot.\n   * @param {boolean} selfMute Whether or not the bot should be self-muted\n   * @returns {boolean} true if the voice state was successfully updated, otherwise false\n   */\n  setSelfMute(selfMute: boolean): boolean {\n    if (typeof selfMute !== \"boolean\") {\n      throw new DisTubeError(\"INVALID_TYPE\", \"boolean\", selfMute, \"selfMute\");\n    }\n    return this.connection.rejoin({\n      ...this.connection.joinConfig,\n      selfMute,\n    });\n  }\n  /**\n   * The voice state of this connection\n   * @type {Discord.VoiceState?}\n   */\n  get voiceState(): VoiceState | undefined {\n    return this.channel?.guild?.me?.voice;\n  }\n}\n"]}