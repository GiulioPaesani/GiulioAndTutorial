{"version":3,"file":"DisTubeBase.js","sourceRoot":"","sources":["../../src/core/DisTubeBase.ts"],"names":[],"mappings":";;;AAGA;;;GAGG;AACH,MAAsB,WAAW;IAE/B,YAAY,OAAgB;QAC1B;;;WAGG;QACH,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACD;;;;;OAKG;IACH,IAAI,CAAC,SAA8B,EAAE,GAAG,IAAS;QAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAC/C,CAAC;IACD;;;;OAIG;IACH,SAAS,CAAC,KAAY,EAAE,OAA+B;QACrD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IACD;;;;OAIG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD;;;;OAIG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD;;;;OAIG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD;;;;OAIG;IACH,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IAC9B,CAAC;IACD;;;;OAIG;IACH,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IAC9B,CAAC;CACF;AAlED,kCAkEC","sourcesContent":["import type { Client, GuildTextBasedChannel } from \"discord.js\";\nimport type { DisTube, DisTubeEvents, DisTubeHandler, DisTubeVoiceManager, Options, QueueManager } from \"..\";\n\n/**\n * @private\n * @abstract\n */\nexport abstract class DisTubeBase {\n  distube: DisTube;\n  constructor(distube: DisTube) {\n    /**\n     * DisTube\n     * @type {DisTube}\n     */\n    this.distube = distube;\n  }\n  /**\n   * Emit the {@link DisTube} of this base\n   * @param {string} eventName Event name\n   * @param {...any} args arguments\n   * @returns {boolean}\n   */\n  emit(eventName: keyof DisTubeEvents, ...args: any): boolean {\n    return this.distube.emit(eventName, ...args);\n  }\n  /**\n   * Emit error event\n   * @param {Error} error error\n   * @param {Discord.BaseGuildTextChannel} [channel] Text channel where the error is encountered.\n   */\n  emitError(error: Error, channel?: GuildTextBasedChannel) {\n    this.distube.emitError(error, channel);\n  }\n  /**\n   * The queue manager\n   * @type {QueueManager}\n   * @readonly\n   */\n  get queues(): QueueManager {\n    return this.distube.queues;\n  }\n  /**\n   * The voice manager\n   * @type {DisTubeVoiceManager}\n   * @readonly\n   */\n  get voices(): DisTubeVoiceManager {\n    return this.distube.voices;\n  }\n  /**\n   * Discord.js client\n   * @type {Discord.Client}\n   * @readonly\n   */\n  get client(): Client {\n    return this.distube.client;\n  }\n  /**\n   * DisTube options\n   * @type {DisTubeOptions}\n   * @readonly\n   */\n  get options(): Options {\n    return this.distube.options;\n  }\n  /**\n   * DisTube handler\n   * @type {DisTubeHandler}\n   * @readonly\n   */\n  get handler(): DisTubeHandler {\n    return this.distube.handler;\n  }\n}\n"]}