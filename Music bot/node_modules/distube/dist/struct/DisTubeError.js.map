{"version":3,"file":"DisTubeError.js","sourceRoot":"","sources":["../../src/struct/DisTubeError.ts"],"names":[],"mappings":"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","sourcesContent":["import { inspect } from \"node:util\";\n\nconst ERROR_MESSAGES = {\n  INVALID_TYPE: (expected: (number | string) | readonly (number | string)[], got: any, name?: string) =>\n    `Expected ${\n      Array.isArray(expected) ? expected.map(e => (typeof e === \"number\" ? e : `'${e}'`)).join(\" or \") : `'${expected}'`\n    }${name ? ` for '${name}'` : \"\"}, but got ${inspect(got)}`,\n  NUMBER_COMPARE: (name: string, expected: string, value: number) => `'${name}' must be ${expected} ${value}`,\n  EMPTY_ARRAY: (name: string) => `'${name}' is an empty array`,\n  EMPTY_FILTERED_ARRAY: (name: string, type: string) => `There is no valid '${type}' in the '${name}' array`,\n  EMPTY_STRING: (name: string) => `'${name}' string must not be empty`,\n  INVALID_KEY: (obj: string, key: string) => `'${key}' does not need to be provided in ${obj}`,\n  MISSING_KEY: (obj: string, key: string) => `'${key}' needs to be provided in ${obj}`,\n  MISSING_KEYS: (obj: string, key: string[], all: boolean) =>\n    `${key.map(k => `'${k}'`).join(all ? \" and \" : \" or \")} need to be provided in ${obj}`,\n\n  MISSING_INTENTS: (i: string) => `${i} intent must be provided for the Client`,\n  DISABLED_OPTION: (o: string) => `DisTubeOptions.${o} is disabled`,\n  ENABLED_OPTION: (o: string) => `DisTubeOptions.${o} is enabled`,\n\n  NOT_IN_VOICE: \"User is not in any voice channel\",\n  VOICE_FULL: \"The voice channel is full\",\n  VOICE_CONNECT_FAILED: (s: number) => `Cannot connect to the voice channel after ${s} seconds`,\n  VOICE_MISSING_PERMS: \"You do not have permission to join this voice channel\",\n  VOICE_RECONNECT_FAILED: \"Cannot reconnect to the voice channel\",\n  VOICE_CHANGE_GUILD: \"Cannot join a channel in a different guild\",\n  VOICE_DEPRECATED_CONNECTION:\n    \"Cannot connect to the voice channel due to a deprecated connection is created.\\n\" +\n    \"Read more: https://distube.js.org/guide/additional-info/update.html#voice\",\n\n  NO_QUEUE: \"There is no playing queue in this guild\",\n  QUEUE_EXIST: \"This guild has a Queue already\",\n  PAUSED: \"The queue has been paused already\",\n  RESUMED: \"The queue has been playing already\",\n  NO_PREVIOUS: \"There is no previous song in this queue\",\n  NO_UP_NEXT: \"There is no up next song\",\n  NO_SONG_POSITION: \"Does not have any song at this position\",\n  NO_PLAYING: \"There is no playing song in the queue\",\n\n  NO_RESULT: \"No result found\",\n  NO_RELATED: \"Cannot find any related songs\",\n  CANNOT_PLAY_RELATED: \"Cannot play the related song\",\n  UNAVAILABLE_VIDEO: \"This video is unavailable\",\n  UNPLAYABLE_FORMATS: \"No playable format found\",\n  NON_NSFW: \"Cannot play age-restricted content in non-NSFW channel\",\n  NOT_SUPPORTED_URL: \"This url is not supported\",\n  CANNOT_RESOLVE_SONG: (t: any) => `Cannot resolve ${inspect(t)} to a Song`,\n  NO_VALID_SONG: \"'songs' array does not have any valid Song, SearchResult or url\",\n  EMPTY_FILTERED_PLAYLIST:\n    \"There is no valid video in the playlist\\n\" +\n    \"Maybe age-restricted contents is filtered because you are in non-NSFW channel\",\n  EMPTY_PLAYLIST: \"There is no valid video in the playlist\",\n};\n\ntype ErrorMessages = typeof ERROR_MESSAGES;\ntype ErrorCodes = keyof ErrorMessages;\ntype ErrorCode = { [K in ErrorCodes]-?: ErrorMessages[K] extends string ? K : never }[ErrorCodes];\ntype ErrorCodeTemplate = Exclude<keyof typeof ERROR_MESSAGES, ErrorCode>;\n\nconst errMsg = (msg: string | ((...x: any) => string), ...args: any) => (typeof msg === \"string\" ? msg : msg(...args));\n\nconst haveCode = (code: string): code is ErrorCodes => Object.keys(ERROR_MESSAGES).includes(code);\n\nexport class DisTubeError<T extends string> extends Error {\n  errorCode: string;\n  constructor(code: ErrorCode);\n  constructor(code: T extends ErrorCodeTemplate ? T : never, ...args: Parameters<ErrorMessages[typeof code]>);\n  constructor(code: ErrorCodeTemplate, _: never);\n  constructor(code: T extends ErrorCodes ? \"This is built-in error code\" : T, message: string);\n  constructor(code: string, ...args: any) {\n    if (haveCode(code)) super(errMsg(ERROR_MESSAGES[code], ...args));\n    else super(...args);\n\n    this.errorCode = code;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, DisTubeError);\n  }\n\n  get name() {\n    return `DisTubeError [${this.errorCode}]`;\n  }\n\n  get code() {\n    return this.errorCode;\n  }\n}\n"]}